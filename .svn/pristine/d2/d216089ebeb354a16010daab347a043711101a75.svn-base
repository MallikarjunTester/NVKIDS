package com.protech.nvkids.testcases.bstl;

import static org.testng.Assert.assertEquals;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.protech.selenium.api.base.SeleniumBase;

import com.protech.nvkids.pages.bstl.BatchStatusLogsPage;
import com.protech.nvkids.pages.login.LoginPage;


public class BatchStatusLogsTestcase extends SeleniumBase 
{
	

	//@Test(priority=1)
	public void verifyfieldspresent() throws Exception
	{
		//log.info(testcaseName);		
		
		testcaseDec = "Navigate to BSTL  - Batch Status Logs screen function and verify all the fields present";		
		report();	
			
		new LoginPage().login().Quicknavigation("BSTL").verifyFieldsPresent();	
		
		// all accordions opens on single click
	}
	
	
	//@Test(priority=2)
	public void VerifyCharAllowance_PositiveScenario() throws Exception
	{
			
		testcaseDec = "VerifyAlphaCharAllowanceFromDate";		
		report();	
			
		new LoginPage().login().Quicknavigation("BSTL").verifyCharecterAllowancePositiveScenario();
	
	}
	
	//@Test(priority=3)
	public void VerifyCharAllowance_NegativeScenario() throws Exception
	{
			
		testcaseDec = "VerifyAlphaCharAllowanceFromDate";		
		report();	
			
		new LoginPage().login().Quicknavigation("BSTL").verifyCharecterAllowanceNegativeScenario();
	
	}
	
	
	public void VerifyFieldsLength() throws Exception
	{
			
		testcaseDec = "VerifyFieldsLength";		
		report();	
			
		new LoginPage().login().Quicknavigation("BSTL").VerifyFieldLength();
	
	}
	
		
	

	//@Test(priority=4)
	public void Inquirewith_nullFromDate() throws Exception
	{

		testcaseDec = "verify the fields present in Batch Status Logs screen";
		report();
		
		new LoginPage().login().Quicknavigation("BSTL").verifyError_NullFromDate();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}
	
  //@Test(priority=5)
	public void Inquirewith_InvalidFromDate() throws Exception
	{

		testcaseDec = "verify the fields with verifyInvalidToDate";
		report();
		
		new LoginPage().login().Quicknavigation("BSTL").verifyInvalidFromDate();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}
	
	//@Test(priority=6)
	public void Inquirewith_InvalidToDate() throws Exception
	{

		testcaseDec = "verify the fields with verifyInvalidToDate";
		report();
		
		new LoginPage().login().Quicknavigation("BSTL").verifyInvalidToDate();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}
	
	//@Test(priority=7)	
	public void InquireWith_FutureFromDate() throws Exception
	{
		
		testcaseDec = "verify the NoMatchingRecords";
		report();
		
		new LoginPage().login().Quicknavigation("BSTL").verifyFutureFromDate();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}

	//@Test(priority=8)	
	public void InquireWith_FutureThroughDate() throws Exception
	{
		testcaseName = "TC005_InquireWith_FutureThroughDate";
		testcaseDec = "InquireWith_FutureThroughDate";
		report();
	
		new LoginPage().login().Quicknavigation("BSTL").verifyFutureToDate();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}

	//@Test(priority=9)
	public void verifyValidation_VerifygGreaterThroughDate() throws Exception
	{
	
		testcaseDec = "VerifyFuturetodate";
		report();
	
		new LoginPage().login().Quicknavigation("BSTL").verifyGreaterThroughDate();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}
	
	
	
	//@Test(priority=10)
	public void verify_NoMatchingRecords() throws Exception
	{
		
		testcaseDec = "verify the fields with _NoMatchingRecords";
		report();
		
		new LoginPage().login().Quicknavigation("BSTL").verifyNoMatchRecords();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}
	
	//@Test(priority=11)
	public void verify_SuccesfulInquiry() throws Exception
	{

		testcaseDec = "verify the fields with _NoMatchingRecords";
		report();
		
		new LoginPage().login().Quicknavigation("BSTL").verifySuccesfulInquiry();
		//new BatchStatusLogs_page().VerifyFieldspresent();
	}




}
